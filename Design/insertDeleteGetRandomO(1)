class RandomizedSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.numbers=[]
        self.numberPositions={}
        

    def insert(self, val: int) -> bool:
        """
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        """
        if val not in self.numberPositions:
            self.numbers.append(val)
            self.numberPositions[val]=len(self.numbers)-1
            return True
        return False
        
    def remove(self, val: int) -> bool:
        """
        Removes a value from the set. Returns true if the set contained the specified element.
        """
        if val in self.numberPositions:
            removePosition=self.numberPositions[val]
            lastElement=self.numbers[-1]
            self.numbers[removePosition]=lastElement
            self.numberPositions[lastElement]=removePosition
            self.numbers.pop()
            del self.numberPositions[val]
            return True
        return False
        

    def getRandom(self) -> int:
        """
        Get a random element from the set.
        """
        return self.numbers[random.randint(0, len(self.numbers)-1)]
        


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()
