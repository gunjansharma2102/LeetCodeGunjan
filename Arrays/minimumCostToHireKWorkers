import heapq
class Solution:
    def mincostToHireWorkers(self, quality: List[int], wage: List[int], K: int) -> float:
        n=len(quality)
        workers=[]
        heap=[]
        for i in range(n):
            workers.append((wage[i]/quality[i], quality[i]))
        workers.sort(key=lambda x: x[0])
        
        cost=float("inf")
        totalQuality=0
        for i in range(n):
            totalQuality+=workers[i][1]
            heapq.heappush(heap, -workers[i][1])
            if len(heap)>K:
                totalQuality+=heapq.heappop(heap)
            
            if len(heap)==K:
                cost=min(cost, totalQuality*workers[i][0])
            
                
        return cost
        
        
