# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        
        if not root:
            return None
        
        stack=[root]
        
        while stack:
            currentNode=stack.pop()
            if currentNode.right:
                stack.append(currentNode.right)
                    
            if currentNode.left:
                stack.append(currentNode.left)
                    
            if stack:
                currentNode.right=stack[-1]
            
            currentNode.left=None
        
        return root
