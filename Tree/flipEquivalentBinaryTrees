# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def flipEquiv(self, root1: TreeNode, root2: TreeNode) -> bool:
        
        if root1==None and root2==None:
            return True
        if root1==None or root2==None:
            return False
        if root1.val!=root2.val:
            return False
        
        a=b=c=d=0
        
        a=self.flipEquiv(root1.left, root2.left)
        b=self.flipEquiv(root1.right, root2.right)

        c=self.flipEquiv(root1.left, root2.right)
        d=self.flipEquiv(root1.right, root2.left)
        
        if a+b==2 or c+d==2:
            return True
        return False
            
        
        
        
        
    
