# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def __init__(self):
        self.xLevel=0
        self.yLevel=0
        self.flag=True
    def isCousins(self, root: TreeNode, x: int, y: int) -> bool:
        def dfs(node, x, y, level):
            if node==None:
                return
            
            left=node.left
            right=node.right
            
            i=0
            
            if left and left.val==x:
                self.xLevel=level+1
                i+=1
            if left and left.val==y:
                self.yLevel=level+1
                i+=1
            if right and right.val==x:
                self.xLevel=level+1
                i+=1
            if right and right.val==y:
                self.yLevel=level+1
                i+=1
            if i>1:
                self.flag=False
            
            dfs(left, x, y, level+1)
            dfs(right, x, y, level+1)
            
        if root==None:
            return False
        
        dfs(root, x, y, 0)
        
        return self.xLevel==self.yLevel and self.flag
        
