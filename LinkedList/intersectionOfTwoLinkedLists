# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:
        ptr1=headA
        ptr2=headB
        ptr3=headA
        ptr4=headB
        skip1=0
        skip2=0
          
        while ptr1!=None and ptr2!=None:
            ptr1=ptr1.next
            ptr2=ptr2.next
        
        while ptr1==None and ptr2!=None:
            skip2+=1
            ptr2=ptr2.next
            
        while ptr2==None and ptr1!=None:
            skip1+=1
            ptr1=ptr1.next
            
        while skip1!=0:
            ptr3=ptr3.next
            skip1-=1
        
        while skip2!=0:
            ptr4=ptr4.next
            skip2-=1
        
        while ptr3!=None and ptr4!=None:
            if ptr3==ptr4:
                return ptr3
            ptr3=ptr3.next
            ptr4=ptr4.next
            
        return None
        
            
        
