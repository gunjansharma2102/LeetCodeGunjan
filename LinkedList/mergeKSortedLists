heapq
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeKLists(self, lists: List[ListNode]) -> ListNode:
        heap=[]
        if lists==[]:
            return None
        flag=0
        for i in range(len(lists)):
            while lists[i]!=None:
                flag+=1
                heapq.heappush(heap,(lists[i].val,flag,lists[i]))
                lists[i]=lists[i].next
        if heap==[]:
            return None
        head=heapq.heappop(heap)[2]
        temp=head
        while heap!=[]:
            temp.next=heapq.heappop(heap)[2]
            temp=temp.next
        return head
        
