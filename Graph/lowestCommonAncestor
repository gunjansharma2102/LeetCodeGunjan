# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def __init__(self):
        self.ans=None
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        
        def traverse(node):
            if node==None:
                return False
            
            left=traverse(node.left)
            right=traverse(node.right)
            
            mid=node==p or node==q
            
            if left+mid+right>=2:
                self.ans=node
            
            return left or mid or right
        
        if root==None:
            return None
        traverse(root)
        return self.ans
        
