class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        nodes=0
        minutes=-1
        visitednodes=0
                    
        q=[]
        
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j]==2:
                    q.append([i,j])
                elif grid[i][j]==1:
                    nodes+=1
        q.append([-1,-1])
        
        while len(q)>0:
            flag=True
            k, l = q.pop(0)
            if k==-1:
                minutes+=1
                if q:
                    q.append([-1,-1])
            else:
                if k>0 and grid[k-1][l]==1:
                    grid[k-1][l]=2
                    q.append([k-1,l])
                    visitednodes+=1
                    
                if l>0 and grid[k][l-1]==1:
                    grid[k][l-1]=2
                    q.append([k,l-1])
                    visitednodes+=1
                    
                if k<len(grid)-1 and grid[k+1][l]==1:
                    grid[k+1][l]=2
                    q.append([k+1,l])
                    visitednodes+=1
                    
                if l<len(grid[k])-1 and grid[k][l+1]==1:
                    grid[k][l+1]=2
                    q.append([k,l+1])
                    visitednodes+=1
                    
        
        if visitednodes<nodes:
            return -1
        else:
            return minutes
