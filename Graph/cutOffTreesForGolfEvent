import heapq
from collections import deque
class Solution:
    def cutOffTree(self, forest: List[List[int]]) -> int:
        
        def minStep(forest, start, des):
            step=0
            q=deque([start])
            
            m=len(forest)
            n=len(forest[0])
            
            visited=[]
            
            for i in range(m):
                visited.append([0]*n)
            
            visited[start[0]][start[1]]=True
            
            
            while q:
                size=len(q)
                for _ in range(size):
                    current=q.popleft()
                    if current[0]==des[0] and current[1]==des[1]:
                        return step
                    if current[0]>0 and forest[current[0]-1][current[1]]>0 and visited[current[0]-1][current[1]]==False:
                        q.append([current[0]-1,current[1]])
                        visited[current[0]-1][current[1]]=True
                    if current[1]>0 and forest[current[0]][current[1]-1]>0 and visited[current[0]][current[1]-1]==False:
                        q.append([current[0],current[1]-1])
                        visited[current[0]][current[1]-1]=True
                    if current[0]<m-1 and forest[current[0]+1][current[1]]>0 and visited[current[0]+1][current[1]]==False:
                        q.append([current[0]+1,current[1]])
                        visited[current[0]+1][current[1]]=True
                    if current[1]<n-1 and forest[current[0]][current[1]+1]>0 and visited[current[0]][current[1]+1]==False:
                        q.append([current[0],current[1]+1])
                        visited[current[0]][current[1]+1]=True
                step+=1
            return -1
                    
                    
        
        heap=[]
        for i in range(len(forest)):
            for j in range(len(forest[i])):
                if forest[i][j]>1:
                    heapq.heappush(heap,(forest[i][j], i, j))
        start=[0,0]
        totalSteps=0
        while heap:
            node=heapq.heappop(heap)
            dest=[node[1],node[2]]
            step=minStep(forest, start, dest)
            if step<0:
                return -1
            totalSteps+=step
            start[0]=node[1]
            start[1]=node[2]
        return totalSteps
            
        
        
