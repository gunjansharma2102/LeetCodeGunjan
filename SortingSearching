class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        if len(nums2)<len(nums1):
            return self.findMedianSortedArrays(nums2, nums1)
        
        m=len(nums1)
        n=len(nums2)
        semi=(m+n+1)//2
        start=0
        end=m
        
        while start<=end:
            i=(start+end)//2
            j= semi-i
            
            if i<m and nums2[j-1]>nums1[i]:
                start=i+1
                
            elif i>0 and nums1[i-1]>nums2[j]:
                end=i-1
                
            else:
                if i==0:
                    maxLeft=nums2[j-1]
                elif j==0:
                    maxLeft=nums1[i-1]
                else:
                    maxLeft=max(nums1[i-1], nums2[j-1])

                if (m+n)%2==1:
                    return maxLeft
                if i==m:
                    minRight=nums2[j]
                elif j==n:
                    minRight=nums1[i]
                else:
                    minRight=min(nums1[i], nums2[j])
                
                
                return (maxLeft+minRight)/2
                
            
        return None
