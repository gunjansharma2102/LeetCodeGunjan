#Two pointer
class Solution:
    def search(self, nums: List[int], target: int) -> int: 
        if len(nums)==0:
            return -1
        i=0
        j=len(nums)-1
        while i<=j:
            if target==nums[i]:
                return i
            elif target==nums[j]:
                return j
            elif target>nums[i]:
                i+=1    
            j-=1
        return -1
        
#Binary
        
class Solution:
    def search(self, nums: List[int], target: int) -> int:
        
        if len(nums)==0:
            return -1
        
        i=0
        j=len(nums)-1
        while i<j:
            mid=i+(j-i)//2
            if nums[mid]>nums[j]:
                i=mid+1
            else:
                j=mid
        
        left=i
        i=0
        j=len(nums)-1
        if target>=nums[left] and target<=nums[j]:
            i=left
        else:
            j=left-1
        while i<=j:
            mid=i+(j-i)//2
            if target<nums[mid]:
                j=mid-1
            elif target>nums[mid]:
                i=mid+1
            else:
                return mid
            
        return -1
        
