# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def middleNode(self, head: ListNode) -> ListNode:
        if head==None or head.next==None:
            return head
        slowPtr=head
        fastPtr=head
        while fastPtr.next!=None and fastPtr.next.next!=None:
            fastPtr=fastPtr.next.next
            slowPtr=slowPtr.next
        if fastPtr.next==None:
            return slowPtr
        else:
            return slowPtr.next
        
